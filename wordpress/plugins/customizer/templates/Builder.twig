{% macro input(element) %}
  {% import _self as builder %}

  {# DefaultのTwigには Swich構文がないらしい #}
  {% if element.input_type == constant('SI_FIELD_TYPE_TEXT') %}
    {{ builder.text(element) }}
  {% elseif element.input_type == constant('SI_FIELD_TYPE_CHECKBOX') %}
    {{ builder.checkbox(element) }}
  {% elseif element.input_type == constant('SI_FIELD_TYPE_HIDDEN') %}
    {{ builder.hidden(element) }}
  {% elseif element.input_type == constant('SI_FIELD_TYPE_FILE') %}
    {{ builder.file(element) }}
  {% elseif element.input_type == constant('SI_FIELD_TYPE_RADIO') %}
    {{ builder.radio(element) }}
  {% elseif element.input_type == constant('SI_FIELD_TYPE_SELECT') %}
    {{ builder.select(element) }}
  {% elseif element.input_type == constant('SI_FIELD_TYPE_NUMBER') %}
    {{ builder.number(element) }}
  {% endif %}
{% endmacro input %}

{# ####################################
 #               text
 #################################### #}
{% macro text(element) %}
  <div class="input {{ element.input_type }}">
    <label for="{{ element.id }}">{{ element.layer_name }}</label>
    <input {{ easyAttrs(element, [], {
      'type': element.input_type,
      'value': element.value
    }) }}>
  </div>
{% endmacro text %}

{# ####################################
 #             textarea
 #################################### #}
{% macro textarea(element) %}
  <div class="input {{ element.input_type }}">
    <label for="{{ element.id }}">{{ element.layer_name }}</label>
    <textarea {{ easyAttrs(element) }}>{{ element.value }}</textarea>
  </div>
{% endmacro textarea %}

{# ####################################
 #             checkbox
 #################################### #}
{% macro checkbox(element) %}
  <div class="input {{ element.input_type }}">
    {# 値がないケースのためにhiddenを仕込む #}
    <input name="{{ element.name }}" {{ renderAttributes(
    element,
    { 'type': 'hidden', 'value': 'none' }
    ) }}>
    {# 要素分Checkbox作成 #}
    {% for choice_value in element.choice_values %}
      <input {{ choice_value.selected }}
      name="{{ element.name }}" {{ 
      renderAttributes(element, { 'type': element.input_type, 'value': choice_value.key }) }}
      >{{ choice_value.name }}
    {% endfor %}
  </div>
{% endmacro checkbox %}

{# ####################################
 #             hidden
 #################################### #}
{% macro hidden(element) %}
  <div class="input {{ element.input_type }}">
    <label for="{{ element.id }}">{{ element.layer_name }}</label>
    <input {{ easyAttrs(element, [], {
      'type': element.input_type,
      'value': element.value
    }) }}>
  </div>
{% endmacro hidden %}

{# ####################################
 #             file
 #################################### #}
{% macro file(element) %}
{% endmacro file %}

{# ####################################
 #             radio
 #################################### #}
{% macro radio(element) %}
  <div class="input {{ element.input_type }}">
    {% for choice_value in element.choice_values %}
      <input {{ choice_value.selected }} name="{{ element.name }}" {{ renderAttributes(
    element,
    { 'type': element.input_type, 'value': choice_value.key }
    ) }}>{{ choice_value.name }}
    {% endfor %}
  </div>
{% endmacro radio %}

{# ####################################
 #             select
 #################################### #}
{% macro select(element) %}
  <div class="input {{ element.input_type }}">
    <select name="{{ element.name }}">
      {% for choice_value in element.choice_values %}
        <option {{ choice_value.selected }} {{ renderAttributes(
        element,
        { 'value': choice_value.key }
        ) }}>{{ choice_value.name }}</option>
      {% endfor %}
    </select>
  </div>
{% endmacro select %}

{# ####################################
 #             number
 #################################### #}
{% macro number(element) %}
  <div class="input {{ element.input_type }}">
    <label for="{{ element.id }}">{{ element.layer_name }}</label>
    <input {{ easyAttrs(element, [], {
      'type': element.input_type,
      'value': element.value
    }) }}>
  </div>
{% endmacro number %}
